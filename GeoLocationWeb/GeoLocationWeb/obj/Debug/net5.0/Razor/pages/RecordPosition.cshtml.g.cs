#pragma checksum "D:\Software_Development\PracticalApps\GeoLocationWeb\GeoLocationWeb\pages\RecordPosition.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0b83c1fee4cd922551e71315d9fcacc4ec81362e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.pages_RecordPosition), @"mvc.1.0.razor-page", @"/pages/RecordPosition.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0b83c1fee4cd922551e71315d9fcacc4ec81362e", @"/pages/RecordPosition.cshtml")]
    public class pages_RecordPosition : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!-- Code behind Razor file -->\r\n");
            WriteLiteral("\r\n<!-- Initial code path -->\r\n");
            WriteLiteral(@"


<div class=""jumbotron shadow bg-dark text-light m-5 p-5"">
	
	<div class=""d-flex align-items-center flex-column"">
		
		<h1 class=""fs-1 display-4"">Recoder position</h1>
		<p class=""fs-3"">Let try record your position by click the button.</p>
		<p class=""fs-4"">This is work by checking every time you move, It will call the callback function every time you change the position.</p>

		<div class=""m-4 p-4 w-75"">
			<p class=""text-info fs-5"" id=""monitor""></p>
			<div class=""m-3 p-1 text-center shadow-sm displayInfo bg-light text-dark rounded"" id=""latitudeLbl""></div>
			<div class=""m-3 p-1 text-center shadow-sm displayInfo bg-light text-dark rounded"" id=""longitudeLbl""></div>
		</div>

		<div class=""text-center"">
			<button class=""btn btn-success mx-5"" id=""startBtn""> Start Record </button>
			<button class=""btn btn-danger mx-5"" id=""stopBtn"" > Stop Record </button>
		</div>
	</div>


</div>




<script type=""text/javascript"">
	
	var idPosition = false;

	var recordBtn = document.getEle");
            WriteLiteral(@"mentById(""startBtn"").onclick = () => {
		
		if(navigator.geolocation){
			
			idPosition = navigator.geolocation.watchPosition(successCallback,errorCallback,{
				enableHighAccuracy: true,
				timeout: 2000,
				maximumAge: 1000
			});
			
		}
		
	
	}

	var stopBtn = document.getElementById(""stopBtn"").onclick = () => {
		
		document.getElementById(""monitor"").innerHTML = ""Stoped recording"";
		navigator.geolocation.clearWatch(idPosition);
		
	}


	function successCallback(position) {
		
		document.getElementById(""monitor"").innerHTML = ""Recording"";
		document.getElementById(""latitudeLbl"").innerHTML = position.coords.latitude;
		document.getElementById(""longitudeLbl"").innerHTML = position.coords.longitude;
	
	}

	function errorCallback(){
		alert(""There is an error about accessing your position, Please try again."");
	}




</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<pages_RecordPosition> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<pages_RecordPosition> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<pages_RecordPosition>)PageContext?.ViewData;
        public pages_RecordPosition Model => ViewData.Model;
    }
}
#pragma warning restore 1591
